library(dplyr)
# library(Seurat)
library(ggplot2)
library(grid)
require(gridExtra)
library(Matrix)
library(data.table)
library(knitr)
library(kableExtra)
library(stringr)
library(RayFunc)
library(scran)
# library(zingeR)
# library(Biobase)
# library(gamlss)
# library(gamlss.tr)
library(edgeR)
library(tictoc)
library(RColorBrewer)
library(sjmisc)
library("readxl")
meta_df = read.csv("meta_data.csv",
row.names=1)
print(dim(meta_df))
# variant_df = read.table("CD10_min5samples_groups_rare_missense_nonsense_sorted.tsv",
#                         sep="\t",
#                         row.names=1,
#                         header=TRUE)
variant_df = read.table("CD10_5samples.tar/CD10_min5samples_groups_sorted.tsv",
sep="\t",
header=TRUE)
variant_df_stat3 =variant_df[which(variant_df$gene_name %in% "STAT3"),]
# # https://bioinformatics.mdanderson.org/transvar/
variant_df_stat3b = variant_df_stat3[which(variant_df_stat3$aa_change %in% "S614R"),]
barcodes_mut = variant_df_stat3b$variant_samples
barcodes_mut2 = unlist(lapply(barcodes_mut,function (x) strsplit(x,split=",")))
barcodes_mut2 = gsub("-1","",barcodes_mut2)
tempValue = rep(0,dim(meta_df)[1])
tempValue[which(rownames(meta_df) %in% barcodes_mut2)]=1
meta_df = replace_columns(meta_df,
data.frame(mutGene_STAT3_S614R = tempValue))
table(paste0(meta_df$celltype_name1,"_",meta_df$mutGene_STAT3_S614R))
write.csv(meta_df,
row.names=TRUE,
file="meta_data.csv")
knitr::opts_chunk$set(cache=FALSE)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(results = 'asis')
knitr::opts_chunk$set(fig.width = 25)
knitr::opts_chunk$set(fig.height = 15)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_knit$set(root.dir = getwd())
knitr::knit_hooks$set(timeit = local({
now = NULL
function(before, options) {
if (before) {
now <<- Sys.time()
} else {
res = difftime(Sys.time(), now)
now <<- NULL
# use options$label if you want the chunk label as well
paste('Time for this code chunk:', as.character(res))
}
}})
)
variant_df = read.table("1960-RCDI_all_tapestri.tsv",
sep="\t",
row.names=1,
header=TRUE)
variant_df = data.frame(t(variant_df))
rownames(variant_df)= gsub("[.]1","",rownames(variant_df))
# meta_df = replace_columns(meta_df,
#                           data.frame(celltype_name3_colour = colour_df))
View(variant_df)
colnames(variant_df)
mut_names = data.frame(colnames(variant_df))
View(mut_names)
mut_names = data.frame(colnames(variant_df))
colnames(mut_names) = "mut"
input_variant = read.csv("export/Variants.csv")
input_mut = read.csv("export/NGT.csv")
# barcodes = colnames(input_mut)
# barcodes = gsub(".1","",barcodes)
old_bar=paste0(rownames(meta_df),"-1")
common_barcodes = intersect(old_bar,
input_mut$Cell)
new_meta = meta_df[match(common_barcodes,old_bar),]
new_variant = input_mut[match(common_barcodes,input_mut$Cell),3:dim(input_mut)[2]]
rownames(new_variant) = rownames(new_meta)
knitr::opts_chunk$set(cache=FALSE)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(results = 'asis')
knitr::opts_chunk$set(fig.width = 25)
knitr::opts_chunk$set(fig.height = 15)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_knit$set(root.dir = getwd())
knitr::knit_hooks$set(timeit = local({
now = NULL
function(before, options) {
if (before) {
now <<- Sys.time()
} else {
res = difftime(Sys.time(), now)
now <<- NULL
# use options$label if you want the chunk label as well
paste('Time for this code chunk:', as.character(res))
}
}})
)
rm(list = ls())
graphics.off()
library(dplyr)
# library(Seurat)
library(ggplot2)
library(grid)
require(gridExtra)
library(Matrix)
library(data.table)
library(knitr)
library(kableExtra)
library(stringr)
library(RayFunc)
library(scran)
# library(zingeR)
# library(Biobase)
# library(gamlss)
# library(gamlss.tr)
library(edgeR)
library(tictoc)
library(RColorBrewer)
library(sjmisc)
library("readxl")
meta_df = read.csv("meta_data.csv",
row.names=1)
print(dim(meta_df))
variant_df = read.table("Celiac_P1_cat1groups_min5samples_tapestri.tsv",
sep="\t",
row.names=1,
header=TRUE)
variant_df = data.frame(t(variant_df))
rownames(variant_df)= gsub("[.]1","",rownames(variant_df))
mut_names = data.frame(colnames(variant_df))
colnames(mut_names) = "mut"
# meta_df = replace_columns(meta_df,
#                           data.frame(celltype_name3_colour = colour_df))
# https://bioinformatics.mdanderson.org/transvar/
common_names = intersect(rownames(meta_df),
rownames(variant_df))
variant_df = variant_df[match(common_names,
rownames(variant_df)),]
gene_keep=c("mutGene_DDX3X_R528C"="X.41346589.41346589.T")
# variant_row = variant_df[,which(colnames(variant_df) %in% as.character(gene_keep))]
temp_df = data.frame(variant_df[,which(colnames(variant_df) %in% as.character(gene_keep))])
colnames(temp_df) = names(gene_keep)
meta_df = replace_columns(meta_df,
temp_df)
table(paste0(meta_df$celltype_name2,"_",meta_df$mutGene_DDX3X_R528C))
View(mut_names)
knitr::opts_chunk$set(cache=FALSE)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(results = 'asis')
knitr::opts_chunk$set(fig.width = 25)
knitr::opts_chunk$set(fig.height = 15)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_knit$set(root.dir = getwd())
knitr::knit_hooks$set(timeit = local({
now = NULL
function(before, options) {
if (before) {
now <<- Sys.time()
} else {
res = difftime(Sys.time(), now)
now <<- NULL
# use options$label if you want the chunk label as well
paste('Time for this code chunk:', as.character(res))
}
}})
)
rm(list = ls())
graphics.off()
library(dplyr)
# library(Seurat)
library(ggplot2)
library(grid)
require(gridExtra)
library(Matrix)
library(data.table)
library(knitr)
library(kableExtra)
library(stringr)
library(RayFunc)
library(scran)
# library(zingeR)
# library(Biobase)
# library(gamlss)
# library(gamlss.tr)
library(edgeR)
library(tictoc)
library(RColorBrewer)
library(sjmisc)
library("readxl")
meta_df = read.csv("meta_data.csv",
row.names=1)
print(dim(meta_df))
variant_df = read.table("1960-RCDI_all_tapestri.tsv",
sep="\t",
row.names=1,
header=TRUE)
variant_df = data.frame(t(variant_df))
rownames(variant_df)= gsub("[.]1","",rownames(variant_df))
mut_names = data.frame(colnames(variant_df))
colnames(mut_names) = "mut"
# meta_df = replace_columns(meta_df,
#                           data.frame(celltype_name3_colour = colour_df))
# https://bioinformatics.mdanderson.org/transvar/
common_names = intersect(rownames(meta_df),
rownames(variant_df))
variant_df = variant_df[match(common_names,
rownames(variant_df)),]
gene_keep=c("mutGene_DDX3X_R528C"="X.41346562.41346562.T")
# 54942
# X.41346562.41346562.T
# 54943
# X.41346563.41346563.T
# 54944
# X.41346564.41346564.G
# variant_row = variant_df[,which(colnames(variant_df) %in% as.character(gene_keep))]
temp_df = data.frame(variant_df[,which(colnames(variant_df) %in% as.character(gene_keep))])
colnames(temp_df) = names(gene_keep)
meta_df = replace_columns(meta_df,
temp_df)
table(paste0(meta_df$celltype_name2,"_",meta_df$mutGene_DDX3X_R528C))
write.csv(meta_df,
row.names=TRUE,
file="meta_data.csv")
knitr::opts_chunk$set(cache=FALSE)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(results = 'asis')
knitr::opts_chunk$set(fig.width = 25)
knitr::opts_chunk$set(fig.height = 15)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_knit$set(root.dir = getwd())
knitr::knit_hooks$set(timeit = local({
now = NULL
function(before, options) {
if (before) {
now <<- Sys.time()
} else {
res = difftime(Sys.time(), now)
now <<- NULL
# use options$label if you want the chunk label as well
paste('Time for this code chunk:', as.character(res))
}
}})
)
rm(list = ls())
graphics.off()
library(dplyr)
# library(Seurat)
library(ggplot2)
library(grid)
require(gridExtra)
library(Matrix)
library(data.table)
library(knitr)
library(kableExtra)
library(stringr)
library(RayFunc)
library(scran)
# library(zingeR)
# library(Biobase)
# library(gamlss)
# library(gamlss.tr)
library(edgeR)
library(tictoc)
library(RColorBrewer)
library(sjmisc)
library("readxl")
meta_df = read.csv("meta_data.csv",
row.names=1)
print(dim(meta_df))
variant_df = read.table("Celiac_P1_cat1groups_min5samples_tapestri.tsv",
sep="\t",
row.names=1,
header=TRUE)
variant_df = data.frame(t(variant_df))
rownames(variant_df)= gsub("[.]1","",rownames(variant_df))
mut_names = data.frame(colnames(variant_df))
colnames(mut_names) = "mut"
# meta_df = replace_columns(meta_df,
#                           data.frame(celltype_name3_colour = colour_df))
# https://bioinformatics.mdanderson.org/transvar/
common_names = intersect(rownames(meta_df),
rownames(variant_df))
variant_df = variant_df[match(common_names,
rownames(variant_df)),]
gene_keep=c("mutGene_DDX3X_R528C"="X.41346589.41346589.T")
# variant_row = variant_df[,which(colnames(variant_df) %in% as.character(gene_keep))]
temp_df = data.frame(variant_df[,which(colnames(variant_df) %in% as.character(gene_keep))])
colnames(temp_df) = names(gene_keep)
meta_df = replace_columns(meta_df,
temp_df)
table(paste0(meta_df$celltype_name2,"_",meta_df$mutGene_DDX3X_R528C))
write.csv(meta_df,
row.names=TRUE,
file="meta_data.csv")
table(meta_df$mutGene_DDX3X_R528C)
table(variant_df[,1])
table(variant_df[,2])
table(variant_df[,3])
knitr::opts_chunk$set(cache=FALSE)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(results = 'asis')
knitr::opts_chunk$set(fig.width = 25)
knitr::opts_chunk$set(fig.height = 15)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_knit$set(root.dir = getwd())
knitr::knit_hooks$set(timeit = local({
now = NULL
function(before, options) {
if (before) {
now <<- Sys.time()
} else {
res = difftime(Sys.time(), now)
now <<- NULL
# use options$label if you want the chunk label as well
paste('Time for this code chunk:', as.character(res))
}
}})
)
rm(list = ls())
graphics.off()
library(dplyr)
# library(Seurat)
library(ggplot2)
library(grid)
require(gridExtra)
library(Matrix)
library(data.table)
library(knitr)
library(kableExtra)
library(stringr)
library(RayFunc)
library(scran)
# library(zingeR)
# library(Biobase)
# library(gamlss)
# library(gamlss.tr)
library(edgeR)
library(tictoc)
library(RColorBrewer)
library(sjmisc)
library("readxl")
meta_df = read.csv("meta_data.csv",
row.names=1)
print(dim(meta_df))
variant_df = read.table("1960-RCDI_all_tapestri.tsv",
sep="\t",
row.names=1,
header=TRUE)
variant_df = data.frame(t(variant_df))
rownames(variant_df)= gsub("[.]1","",rownames(variant_df))
mut_names = data.frame(colnames(variant_df))
colnames(mut_names) = "mut"
# meta_df = replace_columns(meta_df,
#                           data.frame(celltype_name3_colour = colour_df))
# https://bioinformatics.mdanderson.org/transvar/
common_names = intersect(rownames(meta_df),
rownames(variant_df))
variant_df = variant_df[match(common_names,
rownames(variant_df)),]
gene_keep=c("mutGene_DDX3X_R528C"="X.41346562.41346562.T")
# 54942
# X.41346562.41346562.T
# 54943
# X.41346563.41346563.T
# 54944
# X.41346564.41346564.G
# variant_row = variant_df[,which(colnames(variant_df) %in% as.character(gene_keep))]
temp_df = data.frame(variant_df[,which(colnames(variant_df) %in% as.character(gene_keep))])
colnames(temp_df) = names(gene_keep)
meta_df = replace_columns(meta_df,
temp_df)
table(paste0(meta_df$celltype_name2,"_",meta_df$mutGene_DDX3X_R528C))
View(variant_df)
View(mut_names)
View(variant_df)
install.packages("devtools")
devtools::install_github("https://github.com/CostaLab/sc2marker", build_vignettes = TRUE)
knitr::opts_chunk$set(cache=FALSE)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(results = 'asis')
knitr::opts_chunk$set(fig.width = 25)
knitr::opts_chunk$set(fig.height = 10)
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_knit$set(root.dir = getwd())
knitr::knit_hooks$set(timeit = local({
now = NULL
function(before, options) {
if (before) {
now <<- Sys.time()
} else {
res = difftime(Sys.time(), now)
now <<- NULL
# use options$label if you want the chunk label as well
paste('Time for this code chunk:', as.character(res))
}
}})
)
rm(list = ls())
graphics.off()
library(Matrix)
library(dplyr)
library(Seurat)
library(ggplot2)
library(grid)
require(gridExtra)
library(data.table)
library(knitr)
library(kableExtra)
# library(CiteFuse)
library(scater)
# library(SingleCellExperiment)
library(geneBasisR)
require(sc2marker)
immune.combined=readRDS("../../covid/adaptive/integrated_seurat_gene_ref.rds")
immune.combined_protein=readRDS("../../covid/adaptive/integrated_seurat_protein.rds")
meta_gene = immune.combined@meta.data
meta_protein = immune.combined_protein@meta.data
# write.csv(meta_gene,
#           "meta_gene.csv")
#
# write.csv(meta_protein,
#           "meta_protein.csv")
print(table(meta_protein$disease))
cells_healthy = rownames(meta_protein)[which(meta_protein$disease %in% "normal")]
cells_healthy=cells_healthy[1:1000]
matrix_protein_norm = t(immune.combined_protein@assays$RNA@counts)
# matrix_protein_norm = t(immune.combined_protein@assays$RNA@data)
common_cells = intersect(cells_healthy,rownames(matrix_protein_norm))
matrix_protein_healthy_norm = matrix_protein_norm[match(common_cells,rownames(matrix_protein_norm)),]
meta_protein_healthy = meta_protein[match(common_cells,
rownames(meta_protein)),]
# matrix_protein3 = immune.combined_protein@assays$RNA@scale.data
input_matrix = matrix_protein_healthy_norm
clusters = meta_protein_healthy$cell_type
sce  <- SingleCellExperiment(list(counts=t(input_matrix)),
colData=data.frame(cell_type=clusters))
logcounts(sce) <- log2(t(input_matrix) + 1)
num_markers = 15
# geneBasisWrapper <- function (sce, clusters,num_markers, ...){
#
#     sce = retain_informative_genes(sce)
#     marker_output = gene_search(sce, n_genes_total = num_markers)
#     return(marker_output$gene)
#
# }
# markers_geneBasis = geneBasisWrapper(sce,
#                                      clusters,
#                                      num_markers)
celltype_mapping = get_celltype_mapping(sce ,
genes.selection = markers_geneBasis,
celltype.id = "cell_type",
return.stat = T)
?Detect_single_marker
library(Matrix)
library(dplyr)
library(Seurat)
library(ggplot2)
library(grid)
require(gridExtra)
library(data.table)
library(knitr)
library(kableExtra)
# library(CiteFuse)
library(scater)
# library(SingleCellExperiment)
library(geneBasisR)
require(sc2marker)
?Detect_single_marker
library(Matrix)
library(dplyr)
library(Seurat)
library(ggplot2)
library(grid)
require(gridExtra)
library(data.table)
library(knitr)
library(kableExtra)
# library(CiteFuse)
library(scater)
# library(SingleCellExperiment)
# library(geneBasisR)
library(sc2marker)
install.packages("devtools")
devtools::install_github("https://github.com/CostaLab/sc2marker", build_vignettes = TRUE)
install.packages("spatstat.utils")
install.packages("devtools")
devtools::install_github("https://github.com/CostaLab/sc2marker", build_vignettes = TRUE)
install.packages("devtools")
